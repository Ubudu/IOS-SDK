//
//  UbuduUser.h
//  UbuduSDK
//
// Copyright (c) 2011, UBUDU SAS
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
//         SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#import <Foundation/Foundation.h>

/**
 *  Information about the current user that are automatically uploaded to Ubudu's server.
 *  These information can be used to:
 *  - establish a link between the current Ubudu user and a user of your system of information.
 *  - customize your rules and their content (notification message placeholders using properties, user targeting using tags)
 */
@interface UbuduUser : NSObject <NSCopying>

/**
 *  The ID generated by the SDK used to identify the current device.
 */
+ (NSString *)ubuduUserID;

/**
 *  An ID of your choice you can use to identify the current device or user.
 *
 *  Typically you use this property to establish a link between the anonymous users managed by the SDK and the users that exist within you information system.
 *  When you set this property after the SDK has been started, a request is made to the back-office to update the user information.
 */
@property (nonatomic, copy) NSString *userID;

/**
 *  Custom user properties. Can be used as placeholders for notification messages.
 *
 *  You can use this property to attach custom properties to your users. These values are sent to the back-office.
 *  When you set this property after the SDK has been started, a request is made to the back-office to update the user information.
 *
 *  @note: The keys "ext_id" and "tags" are reserved by the SDK. If you set them they will be removed and will never be sent to the back-office.
 */
@property (nonatomic, copy) NSDictionary *properties;

/**
 *  User tags. Can be used for user targeting.
 *
 *  Tags are simply strings which can be used to create user segments (by filtering and categorizing users).
 *  In the back-office you can define conditions for your actions that depend on the tags assigned to a user.
 *  When you set this property after the SDK has been started, a request is made to the back-office to update the user information.
 */
@property (nonatomic, copy) NSArray *tags;

/**
 *  The advertising identifier, alaphanumeric string unique to each device - used only for statistics
 */
@property (nonatomic, readonly) NSString *idfa;

/**
 *  The value that indicates whether the user has limited ad tracking.
 */
@property (nonatomic) BOOL advertisingTrackingModeEnabled;

/**
 *  Init a newly created user object with the provided ID. Tags and properties will be set to nil.
 *
 *  @param userID Your user ID.
 *
 *  @return A user object initialized with the provided user ID.
 */
- (instancetype)initWithID:(NSString *)userID;

/**
 *  Init a newly created user object with the provided user ID and properties.
 *
 *  @param userID Your user ID.
 *  @param properties The properties of the user.
 *
 *  @return A user object initialized with the provided user ID and properties.
 */
- (instancetype)initWithID:(NSString *)userID withProperties:(NSDictionary *)properties;

/**
 *  Init a newly created user object with the provided user ID, properties and tags.
 *
 *  @param userID Your user ID.
 *  @param properties The properties of the user.
 *  @param tags The tags of the user.
 *
 *  @return A user object initialized with the provided user ID, properties and tags.
 */
- (instancetype)initWithID:(NSString *)userID withProperties:(NSDictionary *)properties tags:(NSArray *)tags;

/**
 *  Compare if two user objects are identical. User objects are condifered equal if their properties have the same content.
 *
 *  @param user The user to compare to.
 *
 *  @return YES if both user objects are identical, NO otherwise.
 */
- (BOOL)isEqualToUbuduUser:(UbuduUser *)user;

@end
